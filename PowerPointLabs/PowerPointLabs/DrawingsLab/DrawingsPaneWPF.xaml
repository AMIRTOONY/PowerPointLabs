<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:PowerPointLabs.Converters"
             xmlns:dataSources="clr-namespace:PowerPointLabs.DataSources"
             xmlns:cc="clr-namespace:PowerPointLabs.WPF"
             x:Class="PowerPointLabs.DrawingsLab.DrawingsPaneWPF"
             mc:Ignorable="d" 
             d:DesignWidth="304" d:DesignHeight="530">
    <!-- Original: 304 x 883 -->
    <UserControl.Resources>
        <dataSources:DrawingsLabDataSource x:Key="DrawingsLabData"/>
        <converters:FloatToStringConverter x:Key="FloatToStringConverter"/>
        <converters:IntToStringConverter x:Key="IntToStringConverter"/>
        <converters:EnumMatchToBooleanConverter x:Key="EnumMatchToBooleanConverter"/>
        <converters:ColorToBackgroundConverter x:Key="ColorToBackgroundConverter"/>
        
        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="#0070c0" />
            <Setter Property="Foreground" Value="#fff0f0" />
            <Setter Property="Margin" Value="1" />
        </Style>
    </UserControl.Resources>
    <Grid DataContext="{StaticResource DrawingsLabData}">
        <Grid.Resources>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="38*"/>
            <RowDefinition Height="38*"/>
            <RowDefinition Height="38*"/>
            <RowDefinition Height="38*"/>
            <RowDefinition Height="19*"/>
            <RowDefinition Height="18*"/>
            <RowDefinition Height="19*"/>
            <RowDefinition Height="18*"/>
            <RowDefinition Height="19*"/>
            <RowDefinition Height="19*"/>
            <RowDefinition Height="38*"/>
            <RowDefinition Height="38*"/>
            <RowDefinition Height="38*"/>
            <RowDefinition Height="38*"/>
            <RowDefinition Height="38*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <cc:ImageButton x:Name="CircleButton" Text="Circle" Grid.Row="1" Grid.Column="0"/>
        <cc:ImageButton x:Name="RectButton" Text="Rect" Grid.Row="1" Grid.Column="1"/>
        <cc:ImageButton x:Name="RoundedRectButton" Text="Round&#xa;Rect" Grid.Row="2" Grid.Column="1"/>
        
        <cc:ImageButton x:Name="LineButton" Text="Line" Grid.Row="1" Grid.Column="2" Image="../Resources/DrawingLab/testimage.png"/>
        <cc:ImageButton x:Name="ArrowButton" Text="Arrow" Grid.Row="2" Grid.Column="2"/>

        <cc:ImageButton x:Name="TextboxButton" Text="TextBox" Grid.Row="1" Grid.Column="3"/>

        <ToggleButton x:Name="ToggleHotkeysButton" Content="Hotkeys" Grid.Row="1" Grid.Column="5" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=HotkeysEnabled, Mode=TwoWay}" Style="{StaticResource ToggleButtonStyle}"/>

        <cc:ImageButton x:Name="SelectTypeButton" Text="Select&#xa;Type" Grid.Row="3" Grid.Column="0"/>
        <cc:ImageButton x:Name="HideButton" Text="Hide" Grid.Row="3" Grid.Column="2"/>
        <cc:ImageButton x:Name="ShowAllButton" Text="Show&#xa;All" Grid.Row="3" Grid.Column="3"/>
        <cc:ImageButton x:Name="DuplicateButton" Text="Duplicate" Grid.Row="3" Grid.Column="1"/>

        <TabControl Grid.Row="4" Grid.Column="0"  Grid.RowSpan="11"  Grid.ColumnSpan="6" TabStripPlacement="Right">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Padding" Value="7" />
                    <Setter Property="Height" Value="80" />
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentPresenter Content="{TemplateBinding Content}">
                                    <ContentPresenter.LayoutTransform>
                                        <RotateTransform Angle="90" />
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>

            <!-- TAB: MAIN - START -->
            <TabItem Name="TabMain" Header="Main">
                <TabItem.Content>
                    <Grid DataContext="{StaticResource DrawingsLabData}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="76*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <cc:ImageButton x:Name="AddTextButtonMain" Text="Add&#xa;Text" Grid.Row="0" Grid.Column="0"/>
                        <cc:ImageButton x:Name="AddMathButtonMain" Text="Add&#xa;Math" Grid.Row="0" Grid.Column="1"/>
                        <cc:ImageButton x:Name="RemoveTextButtonMain" Text="Remove&#xa;Text" Grid.Row="0" Grid.Column="2"/>

                        <cc:ImageButton x:Name="GroupButtonMain" Text="Group" Grid.Row="1" Grid.Column="3"/>
                        <cc:ImageButton x:Name="UngroupButtonMain" Text="Ungroup" Grid.Row="1" Grid.Column="4"/>

                        <Grid Row="2" Column="0" ColumnSpan="5" DataContext="{StaticResource DrawingsLabData}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="38*"/>
                                <RowDefinition Height="38*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <cc:ImageButton x:Name="RecordPositionButtonMain" Text="Record&#xa;Position" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"/>
                            <cc:ImageButton x:Name="ApplyPositionButtonMain" Text="Apply&#xa;Position" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"/>
                            <cc:ImageButton x:Name="RecordDisplacementButtonMain" Text="Record&#xa;Displacement" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2"/>
                            <cc:ImageButton x:Name="ApplyDisplacementButtonMain" Text="Apply&#xa;Displacement" Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2"/>
                            <cc:ImageButton x:Name="RecordFormatButtonMain" Text="Record&#xa;Format" Grid.Row="0" Grid.Column="4" Grid.ColumnSpan="2"/>
                            <cc:ImageButton x:Name="ApplyFormatButtonMain" Text="Apply&#xa;Format" Grid.Row="1" Grid.Column="4" Grid.ColumnSpan="2"/>
                        </Grid>

                        <cc:ImageButton x:Name="AlignHorizontalButtonMain" Text="Align&#xa;Horizontal" Grid.Row="3" Grid.Column="0"/>
                        <cc:ImageButton x:Name="AlignVerticalButtonMain" Text="Align&#xa;Vertical" Grid.Row="3" Grid.Column="1"/>

                        <cc:ImageButton x:Name="MultiCloneBetweenButtonMain" Text="MultiClone&#xa;Between" Grid.Row="3" Grid.Column="3"/>
                        <cc:ImageButton x:Name="MultiCloneExtendButtonMain" Text="MultiClone&#xa;Extend" Grid.Row="3" Grid.Column="4"/>

                        <cc:ImageButton x:Name="BringInFrontOfShapeButtonMain" Text="Front Of&#xa;Shape" Grid.Row="5" Grid.Column="1"/>
                        <cc:ImageButton x:Name="SendBehindShapeButtonMain" Text="Behind&#xa;Shape" Grid.Row="5" Grid.Column="2"/>
                        <cc:ImageButton x:Name="BringToFrontButtonMain" Text="Bring&#xa;To Front" Grid.Row="6" Grid.Column="0"/>
                        <cc:ImageButton x:Name="BringForwardButtonMain" Text="Bring&#xa;Forward" Grid.Row="6" Grid.Column="1"/>
                        <cc:ImageButton x:Name="SendBackwardButtonMain" Text="Send&#xa;Backward" Grid.Row="6" Grid.Column="2"/>
                        <cc:ImageButton x:Name="SendToBackButtonMain" Text="Send&#xa;To Back" Grid.Row="6" Grid.Column="3"/>
                    </Grid>
                </TabItem.Content>
            </TabItem>
            <!-- TAB: MAIN - END -->

            <!-- TAB: FORMAT - START -->
            <TabItem Name="TabFormat" Header="Format">
                <TabItem.Content>
                    <Grid DataContext="{StaticResource DrawingsLabData}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="266*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Row="1" Column="0" ColumnSpan="5" DataContext="{StaticResource DrawingsLabData}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="3*"/>
                                <RowDefinition Height="2*"/>
                                <RowDefinition Height="2*"/>
                                <RowDefinition Height="2*"/>
                                <RowDefinition Height="2*"/>
                                <RowDefinition Height="4*"/>
                                <RowDefinition Height="2*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="4*"/>
                            </Grid.ColumnDefinitions>
                            <cc:ImageButton x:Name="RecordFormatButton" Text="Record&#xa;Format" Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="0"/>
                            <cc:ImageButton x:Name="ApplyFormatButton" Text="Apply&#xa;Format" Grid.Row="0" Grid.ColumnSpan="1" Grid.Column="2"/>

                            <!-- Line -->
                            <ToggleButton x:Name="ToggleSyncLineButton" Content="Sync Line" Margin="2" Grid.Row="1" Grid.Column="0" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatSyncLineStyle, Mode=TwoWay}"/>

                            <Grid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="2" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatSyncLineStyle}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton x:Name="ToggleLineButton" Content="Present" Grid.Row="0" Grid.Column="0" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeHasLine}" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatHasLine, Mode=TwoWay}"/>
                                <CheckBox Content=""  Grid.Row="0" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeHasLine, Mode=TwoWay}"/>

                                <Button Grid.Row="0" Grid.Column="2" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeLineColor}" Background="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatLineColor, Mode=TwoWay, Converter={StaticResource ColorToBackgroundConverter}}" Click="LineColor_Click"/>
                                <CheckBox Content="" Grid.Row="0" Grid.Column="3" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeLineColor, Mode=TwoWay}"/>

                                <TextBox Grid.Row="1" Grid.Column="0" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeLineWeight}" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatLineWeight, Mode=TwoWay, Converter={StaticResource FloatToStringConverter}}"/>
                                <CheckBox Content="" Grid.Row="1" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeLineWeight, Mode=TwoWay}"/>

                                <cc:ImageButton x:Name="LineStyleButton" Content="Style" Grid.Row="1" Grid.Column="2" Margin="0"/>
                                <CheckBox Content=""  Grid.Row="1" Grid.Column="3" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeLineDashStyle, Mode=TwoWay}"/>
                            </Grid>

                            <!-- Fill -->
                            <ToggleButton x:Name="ToggleSyncFillButton" Content="Sync Fill" Margin="2" Grid.Row="3" Grid.Column="0" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatSyncFillStyle, Mode=TwoWay}"/>

                            <Grid Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatSyncFillStyle}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton x:Name="ToggleFillButton" Content="Present" Grid.Row="0" Grid.Column="0" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeHasFill}" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatHasFill, Mode=TwoWay}"/>
                                <CheckBox Content=""  Grid.Row="0" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeHasFill, Mode=TwoWay}"/>

                                <Button Grid.Row="0" Grid.Column="2" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeFillColor}" Background="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatFillColor, Mode=TwoWay, Converter={StaticResource ColorToBackgroundConverter}}" Click="FillColor_Click"/>
                                <CheckBox Content="" Grid.Row="0" Grid.Column="3" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeFillColor, Mode=TwoWay}"/>

                            </Grid>

                            <!-- Text -->
                            <ToggleButton x:Name="ToggleSyncTextButton" Content="Sync Text" Margin="2" Grid.Row="4" Grid.Column="0" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatSyncTextStyle, Mode=TwoWay}"/>

                            <Grid Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="2" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatSyncTextStyle}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Row="0" Grid.Column="0" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeText}" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatText, Mode=TwoWay}"/>
                                <CheckBox Content=""  Grid.Row="0" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeText, Mode=TwoWay}"/>

                                <Button Grid.Row="0" Grid.Column="2" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeTextColor}" Background="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatTextColor, Mode=TwoWay, Converter={StaticResource ColorToBackgroundConverter}}" Click="TextColor_Click"/>
                                <CheckBox Content="" Grid.Row="0" Grid.Column="3" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeTextColor, Mode=TwoWay}"/>

                                <TextBox Grid.Row="1" Grid.Column="0" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeTextFontSize}" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatTextFontSize, Mode=TwoWay, Converter={StaticResource FloatToStringConverter}}"/>
                                <CheckBox Content="" Grid.Row="1" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeTextFontSize, Mode=TwoWay}"/>

                                <TextBox Grid.Row="1" Grid.Column="2" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeTextFont}" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatTextFont, Mode=TwoWay}"/>
                                <CheckBox Content=""  Grid.Row="1" Grid.Column="3" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeTextFont, Mode=TwoWay}"/>

                                <ToggleButton x:Name="ToggleTextWrapButton" Content="Wrap" Grid.Row="2" Grid.Column="0" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeTextWrap}" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatTextWrap, Mode=TwoWay}"/>
                                <CheckBox Content=""  Grid.Row="2" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeTextWrap, Mode=TwoWay}"/>

                                <ToggleButton x:Name="ToggleTextShrinkButton" Content="Shrink" Grid.Row="2" Grid.Column="2" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeTextAutoSize}" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatTextAutoSize, Mode=TwoWay}"/>
                                <CheckBox Content=""  Grid.Row="2" Grid.Column="3" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeTextAutoSize, Mode=TwoWay}"/>

                            </Grid>


                            <!-- Size -->
                            <ToggleButton x:Name="ToggleSyncSizeButton" Content="Sync Size" Margin="2" Grid.Row="6" Grid.Column="0" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatSyncSize, Mode=TwoWay}"/>

                            <Grid Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatSyncSize}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>

                                <TextBox Grid.Row="0" Grid.Column="0" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeWidth}" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatWidth, Mode=TwoWay, Converter={StaticResource FloatToStringConverter}}"/>
                                <CheckBox Content="X" Grid.Row="0" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeWidth, Mode=TwoWay}"/>

                                <TextBox Grid.Row="0" Grid.Column="2" IsEnabled="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeHeight}" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatHeight, Mode=TwoWay, Converter={StaticResource FloatToStringConverter}}"/>
                                <CheckBox Content="Y" Grid.Row="0" Grid.Column="3" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=FormatIncludeHeight, Mode=TwoWay}"/>
                            </Grid>
                        </Grid>

                        <cc:ImageButton x:Name="AddTextButton" Text="Add&#xa;Text" Grid.Row="0" Grid.Column="0"/>
                        <cc:ImageButton x:Name="AddMathButton" Text="Add&#xa;Math" Grid.Row="0" Grid.Column="1"/>
                        <cc:ImageButton x:Name="RemoveTextButton" Text="Remove&#xa;Text" Grid.Row="0" Grid.Column="2"/>

                    </Grid>
                </TabItem.Content>
            </TabItem>
            <!-- TAB: FORMAT - END -->

            <!-- TAB: POSITION - START -->
            <TabItem Name="TabPosition" Header="Position">
                <TabItem.Content>
                    <Grid DataContext="{StaticResource DrawingsLabData}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="114*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Row="2" Grid.Column="1" DataContext="{StaticResource DrawingsLabData}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>
                        </Grid>

                        <Grid Row="0" Column="0" ColumnSpan="5" DataContext="{StaticResource DrawingsLabData}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="38*"/>
                                <RowDefinition Height="19*"/>
                                <RowDefinition Height="19*"/>
                                <RowDefinition Height="19*"/>
                                <RowDefinition Height="19*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <cc:ImageButton x:Name="RecordPositionButton" Text="Record&#xa;Position" Grid.Row="0" Grid.Column="0"/>
                            <cc:ImageButton x:Name="ApplyPositionButton" Text="Apply&#xa;Position" Grid.Row="0" Grid.Column="1"/>
                            <cc:ImageButton x:Name="RecordDisplacementButton" Text="Record&#xa;Displacement" Grid.Row="0" Grid.Column="2"/>
                            <cc:ImageButton x:Name="ApplyDisplacementButton" Text="Apply&#xa;Displacement" Grid.Row="0" Grid.Column="3"/>

                            <TextBox Grid.Row="1" Grid.Column="0" IsEnabled="{Binding IsChecked, ElementName=SavedIncludeX}" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=SavedValueX, Mode=TwoWay, Converter={StaticResource FloatToStringConverter}}"/>
                            <TextBox Grid.Row="2" Grid.Column="0" IsEnabled="{Binding IsChecked, ElementName=SavedIncludeY}" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=SavedValueY, Mode=TwoWay, Converter={StaticResource FloatToStringConverter}}"/>
                            <TextBox Grid.Row="3" Grid.Column="0" IsEnabled="{Binding IsChecked, ElementName=SavedIncludeRotation}" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=SavedValueRotation, Mode=TwoWay, Converter={StaticResource FloatToStringConverter}}"/>
                            <CheckBox Content="Pos" Grid.Row="4" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=SavedIncludePositionBoth, Mode=TwoWay}"/>
                            <CheckBox Content="X" x:Name="SavedIncludeX" Grid.Row="1" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=SavedIncludePositionX, Mode=TwoWay}"/>
                            <CheckBox Content="Y" x:Name="SavedIncludeY" Grid.Row="2" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=SavedIncludePositionY, Mode=TwoWay}"/>
                            <CheckBox Content="Rtn" x:Name="SavedIncludeRotation" Grid.Row="3" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=SavedIncludeRotation, Mode=TwoWay}"/>

                            <TextBox Grid.Row="1" Grid.Column="2" IsEnabled="{Binding IsChecked, ElementName=ShiftIncludeX}" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=ShiftValueX, Mode=TwoWay, Converter={StaticResource FloatToStringConverter}}"/>
                            <TextBox Grid.Row="2" Grid.Column="2" IsEnabled="{Binding IsChecked, ElementName=ShiftIncludeY}" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=ShiftValueY, Mode=TwoWay, Converter={StaticResource FloatToStringConverter}}"/>
                            <TextBox Grid.Row="3" Grid.Column="2" IsEnabled="{Binding IsChecked, ElementName=ShiftIncludeRotation}" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=ShiftValueRotation, Mode=TwoWay, Converter={StaticResource FloatToStringConverter}}"/>
                            <CheckBox Content="Pos" Grid.Row="4" Grid.Column="3" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=ShiftIncludePositionBoth, Mode=TwoWay}"/>
                            <CheckBox Content="X" x:Name="ShiftIncludeX" Grid.Row="1" Grid.Column="3" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=ShiftIncludePositionX, Mode=TwoWay}"/>
                            <CheckBox Content="Y" x:Name="ShiftIncludeY" Grid.Row="2" Grid.Column="3" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=ShiftIncludePositionY, Mode=TwoWay}"/>
                            <CheckBox Content="Rtn" x:Name="ShiftIncludeRotation" Grid.Row="3" Grid.Column="3" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=ShiftIncludeRotation, Mode=TwoWay}"/>


                            <Grid Row="0" Column="4" RowSpan="3" ColumnSpan="2" DataContext="{StaticResource DrawingsLabData}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <RadioButton Grid.Row="0" Grid.Column="0" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=Anchor, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=TopLeft}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <RadioButton Grid.Row="0" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=Anchor, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=TopCenter}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <RadioButton Grid.Row="0" Grid.Column="2" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=Anchor, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=TopRight}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <RadioButton Grid.Row="1" Grid.Column="0" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=Anchor, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=MiddleLeft}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <RadioButton Grid.Row="1" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=Anchor, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=MiddleCenter}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <RadioButton Grid.Row="1" Grid.Column="2" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=Anchor, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=MiddleRight}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <RadioButton Grid.Row="2" Grid.Column="0" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=Anchor, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=BottomLeft}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <RadioButton Grid.Row="2" Grid.Column="1" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=Anchor, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=BottomCenter}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <RadioButton Grid.Row="2" Grid.Column="2" IsChecked="{Binding UpdateSourceTrigger=PropertyChanged, Path=Anchor, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=BottomRight}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
 
                        </Grid>
                        
                        <cc:ImageButton x:Name="AlignHorizontalButton" Text="Align&#xa;Horizontal" Grid.Row="1" Grid.Column="2"/>
                        <cc:ImageButton x:Name="AlignVerticalButton" Text="Align&#xa;Vertical" Grid.Row="1" Grid.Column="3"/>
                        <cc:ImageButton x:Name="AlignBothButton" Text="Align&#xa;Both" Grid.Row="1" Grid.Column="4"/>
                        <cc:ImageButton x:Name="AlignHorizontalToSlideButton" Text="Align&#xa;Horizontal&#xa;To Slide" Grid.Row="2" Grid.Column="2"/>
                        <cc:ImageButton x:Name="AlignVerticalToSlideButton" Text="Align&#xa;Vertical&#xa;To Slide" Grid.Row="2" Grid.Column="3"/>
                        <cc:ImageButton x:Name="AlignBothToSlideButton" Text="Align&#xa;Both&#xa;To Slide" Grid.Row="2" Grid.Column="4"/>

                        <cc:ImageButton x:Name="MultiCloneBetweenButton" Text="MultiClone&#xa;Between" Grid.Row="3" Grid.Column="0"/>
                        <cc:ImageButton x:Name="MultiCloneExtendButton" Text="MultiClone&#xa;Extend" Grid.Row="3" Grid.Column="1"/>
                        <cc:ImageButton x:Name="MultiCloneGridButton" Text="MultiClone&#xa;Grid" Grid.Row="3" Grid.Column="2"/>
                        <cc:ImageButton x:Name="PivotAroundButton" Text="Pivot&#xa;Around" Grid.Row="3" Grid.Column="3"/>


                        <cc:ImageButton x:Name="BringInFrontOfShapeButton" Text="Front Of&#xa;Shape" Grid.Row="4" Grid.Column="1"/>
                        <cc:ImageButton x:Name="SendBehindShapeButton" Text="Behind&#xa;Shape" Grid.Row="4" Grid.Column="2"/>
                        <cc:ImageButton x:Name="BringToFrontButton" Text="Bring&#xa;To Front" Grid.Row="5" Grid.Column="0"/>
                        <cc:ImageButton x:Name="BringForwardButton" Text="Bring&#xa;Forward" Grid.Row="5" Grid.Column="1"/>
                        <cc:ImageButton x:Name="SendBackwardButton" Text="Send&#xa;Backward" Grid.Row="5" Grid.Column="2"/>
                        <cc:ImageButton x:Name="SendToBackButton" Text="Send&#xa;To Back" Grid.Row="5" Grid.Column="3"/>

                    </Grid>
                </TabItem.Content>
            </TabItem>
            <!-- TAB: POSITION - END -->

            <!-- TAB: SELECTION - START -->
            <TabItem Name="TabSelection" Header="Selection">
                <TabItem.Content>
                    <Grid DataContext="{StaticResource DrawingsLabData}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                            <RowDefinition Height="38*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </TabItem.Content>
            </TabItem>
            <!-- TAB: SELECTION - END -->
        </TabControl>
    </Grid>
</UserControl>